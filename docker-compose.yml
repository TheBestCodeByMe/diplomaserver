version: '3.8'
services:
#  mysql:
#    hostname: uliaKolosovich_mysql
#    build: ./src/main/resources/sql/ #/SCCHOOL_SITE_SERVER/src/main/resources/sql/create_mysql.sql
#    ports:
#      - '3306:3306'
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: diploma
#      MYSQL_USER: root
#      MYSQL_PASSWORD: root
#    volumes:
#      - db-data:/var/lib/mysql
#      - /src/main/resources/sql/create_schema_mysql.sql:/docker-entrypoint-initdb.d/init.sql
#    tty: true
#    networks:
#      - mysql-db
  backendserver:
    build: . #/SCCHOOL_SITE_SERVER/
    hostname: localhost
    ports:
      - "8080:8080"
#    links:
#      - mysql
#    depends_on:
#      - mysql
    networks:
      - mysql-db
    #restart: always
    #command: sh -c './wait-for 0.0.0.0:3306 -- npm start'
    environment:
      spring.datasource.url: jdbc:mysql://localhost:3306/root
      spring.datasource.username: root
      spring.datasource.password: root
      #DB_HOST: 0.0.0.0 #jdbc:mysql://0.0.0.0:3307/dev_school_db
      #DB_PORT: 3307 #spring.datasource.username: root
      #DB_USER: root #spring.datasource.password: root
      #DB_PASSWORD: root #spring.datasource.password
      #DB_NAME: deb_school_db
  frontend:
    hostname: localhost
    build: D:/SCHOOL-SITE-CLIENT #/home/user/Projects/uonmap/school #./client/
    links:
      - backendserver
    depends_on:
      - backendserver
    ports:
      - "4200"
#volumes:
  #mysql_compose_volume:
# Networks to be created to facilitate communication between containers
# Volumes
      #database:
      #image: mysql:8.0.17
      #container_name: mysql
      #environment:
      #MYSQL_ROOT_PASSWORD: root
      #ports:
      #- "3306:3306"
      #volumes:
      #- mysql_volume:/var/lib/mysql/
    #- ./src/main/resources/sql/create_mysql.sql:/docker-entrypoint-initdb.d/0_init.sql
volumes:
  db-data:

networks:
  mysql-db:
    driver: bridge